@charset 'utf-8';
@use 'sass:math';

@keyframes firefly-drift {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes firefly-flash {
  0%,
  30%,
  100% {
    opacity: 0;
    box-shadow: 0 0 0vw 0vw yellow;
  }
  5% {
    opacity: 1;
    box-shadow: 0 0 2vw 0.4vw yellow;
  }
}

.fireflies {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 99;
  overflow: hidden;

  .firefly {
    position: absolute;
    top: 0;
    left: 0;
    width: 0.4vw;
    height: 0.4vw;
    border-radius: var(--radius-rounded);
    animation: ease 200s alternate infinite;

    &:before,
    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: var(--radius-rounded);
      transform-origin: -10%;
    }

    &:before {
      background: var(--white);
      opacity: 0.4;
      animation: firefly-drift ease alternate infinite;
    }

    &:after {
      background: white;
      opacity: 0;
      box-shadow: 0 0 0vw 0vw yellow;
      animation: firefly-drift ease alternate infinite, firefly-flash ease infinite;
    }
  }

  // Randomize Fireflies Motion

  @for $i from 1 through 10 {
    $steps: random(12) + 16;
    $rotationSpeed: random(10) + 8s;

    .firefly:nth-child(#{$i}) {
      animation-name: firefly-move-#{$i};
      &:before {
        animation-duration: #{$rotationSpeed};
      }
      &:after {
        animation-duration: #{$rotationSpeed}, random(6000) + 5000ms;
        animation-delay: 0ms, random(8000) + 500ms;
      }

      @keyframes firefly-move-#{$i} {
        @for $step from 0 through $steps {
          $percentStep: $step * math.div(100, $steps) + '%';
          #{$percentStep} {
            transform: translateX(random(100) - 50vw)
              translateY(random(100) - 50vh)
              scale(math.div(random(75), 100) + 0.25);
          }
        }
      }
    }
  }
}
